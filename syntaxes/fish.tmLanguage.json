{
  "scopeName": "source.fish",
  "name": "Fish",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#commands"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "match": "(\\s*#)(\\s*@)(fish-lsp-(?:disable|enable)(?:-next-line)?)((?:\\s+[0-9\\s]*)?$)",
          "captures": {
            "1": {
              "name": "comment.line.number-sign.fish"
            },
            "2": {
              "name": "keyword.control.fish-lsp"
            },
            "3": {
              "name": "comment.line.number-sign.fish"
            },
            "4": {
              "name": "comment.line.number-sign.fish"
            }
          }
        },
        {
          "match": "#.*$",
          "name": "comment.line.number-sign.fish"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.fish",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "include": "#variables"
            },
            {
              "include": "#escapes"
            }
          ]
        },
        {
          "name": "string.quoted.single.fish",
          "begin": "'",
          "end": "'"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "meta.embedded.command-substitution.fish",
          "begin": "\\$\\(",
          "end": "\\)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.variable.begin.fish"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.variable.end.fish"
            }
          },
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "include": "#strings"
            },
            {
              "include": "#variables"
            },
            {
              "include": "#commands"
            },
            {
              "include": "#operators"
            }
          ]
        },
        {
          "match": "\\$\\w+",
          "name": "variable.other.fish"
        },
        {
          "match": "\\$\\{[^}]*\\}",
          "name": "variable.other.fish"
        }
      ]
    },
    "commands": {
      "patterns": [
        {
          "match": "(?<=^|;|\\s)(function|if|else|switch|case|while|for|in|begin|end|return|and|or|not|set|read|echo|command|builtin)(?=\\s|$)",
          "name": "keyword.control.fish"
        },
        {
          "match": "(?<=^|;|\\s)(\\w+)(?=\\s|$)",
          "name": "support.function.fish"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "(?<=\\s)(\\||\\||&&|>|>>|<|<<|&)(?=\\s|$)",
          "name": "keyword.operator.fish"
        }
      ]
    },
    "escapes": {
      "patterns": [
        {
          "match": "\\\\[\\\\\"\\$\\n\\t]",
          "name": "constant.character.escape.fish"
        }
      ]
    }
  }
}
